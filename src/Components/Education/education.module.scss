$dot-size: 2.5rem;
$column-gap: 8rem;

.background {
  grid-row: 4/7;
  grid-column: 1/-1;
  @include primaryGradient;
  clip-path: polygon(
    0 $section-intersection-length,
    100% 0,
    100% 100%,
    0 calc(100% - #{$section-intersection-length})
  );
  z-index: 2;
}

.education {
  grid-column: center-start/center-end;
  grid-row: 4/7;
  padding: 30rem 8rem;
  padding-top: 20rem;
  display: grid;
  grid-template-areas:
    "title title title"
    "column timeline columnRight";
  grid-template-columns: 1fr min-content 1fr;
  grid-row-gap: 4rem;
  grid-column-gap: $column-gap;
  z-index: 2;
  overflow: hidden;

  @media only screen and (max-width: $bp-medium) {
    grid-template-areas:
      "title title"
      "column timeline";
    grid-template-columns: 1fr min-content;
  }

  @media only screen and (max-width: $bp-small) {
    padding: 20rem $section-padding-small;
  }
}

.column {
  display: flex;
  flex-direction: column;
  grid-area: column;
  align-items: stretch;
  margin-top: 10rem;

  &--right {
    margin-top: 0;
    grid-area: columnRight;
  }

  @media only screen and (max-width: $bp-medium) {
    margin-top: 0;
  }
}

.heading {
  grid-column: 1/-1;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 0.4rem;
}

.timeline {
  grid-area: timeline;
  border-left: 1rem solid rgba($color-secondary, 0.6);
  justify-self: center;

  @media only screen and (max-width: $bp-medium) {
    justify-self: flex-end;
  }
}

.event {
  background-color: $color-secondary;
  position: relative;
  padding: 4rem;
  box-shadow: $shadow-dark;
  border-radius: 10px;
  display: grid;
  grid-template-areas:
    "title"
    "text"
    "img";

  grid-row-gap: 2rem;
  grid-column-gap: 3rem;
  justify-items: center;

  &:not(:last-child) {
    margin-bottom: 5rem;
  }

  p {
    grid-area: text;
    font-size: 1.4rem;
    color: black;
  }

  h2 {
    grid-area: title;
    color: black;
    text-align: center;
  }

  &::before {
    content: "";
    @include absoluteCenterVertical;
    @include box($dot-size);
    display: inline-block;
    background: #eee;
    // right: calc(-#{$dot-size} / 2 - #{$column-gap} - 0.5rem);
    right: -1 * ($dot-size / 2) - $column-gap - 0.5rem;
    z-index: 2;
    border-radius: 100%;
  }

  &::after {
    content: "";
    @include absoluteCenterVertical(rotate(45deg));
    display: block;
    height: 4rem;
    right: -1.4rem;

    width: 4rem;
    background-color: $color-secondary;

    @media only screen and (max-width: $bp-small) {
      @include box(2.5rem);
      right: -1rem;
    }
  }

  &--right {
    justify-self: right;

    &::after {
      left: -1.4rem;
    }

    &::before {
      left: calc(-#{$dot-size} / 2 - #{$column-gap} - 0.5rem);
    }

    p {
      grid-column: 1;
      grid-row: 2;
    }
  }
}

.img {
  grid-area: img;
}
