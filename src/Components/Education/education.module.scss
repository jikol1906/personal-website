.background {
  grid-row: 4/7;
  grid-column: 1/-1;
  @include primaryGradient;
  clip-path: polygon(
    0 var(--section-intersection-length),
    100% 0,
    100% 100%,
    0 calc(100% - var(--section-intersection-length))
  );
  z-index: 2;
}

.education {
  --timeline-width: 2rem;
  --timeline-dot-size: 6rem;

  --event-dot-size: 4rem;
  --event-column-span: 3;
  --event-padding:5rem;

  --row-height: 20rem;
  --row-gap: 6rem;

  padding: var(--section-padding-top-bottom) var(--section-padding-left-right);
  grid-column: center-start / center-end;
  grid-row: 5/6;
  z-index: 2;

  display: grid;
  grid-template-columns:
    [left-side-start]
    repeat(3, 1fr)
    [left-side-end right-side-start]
    repeat(3, 1fr)
    [right-side-end];

  // grid-template-rows:
  //   [timeline-begin]
  //   var(--row-height)
  //   [timeline-section-1-start]
  //   var(--timeline-width)
  //   [timeline-begin-end]
  //   repeat(3, var(--row-height))
  //   [timeline-section-2-start]
  //   var(--timeline-width)
  //   [timeline-section-1-end]
  //   repeat(3, var(--row-height))
  //   [timeline-section-3-start]
  //   var(--timeline-width)
  //   [timeline-section-2-end]
  //   repeat(3, var(--row-height))
  //   [timeline-section-4-start]
  //   var(--timeline-width)
  //   [timeline-section-3-end]
  //   repeat(3, var(--row-height));

  grid-template-rows:
    var(--row-height)
    var(--timeline-width)
    repeat(
      5,
      var(--row-height) var(--row-height) var(--row-height)
        var(--timeline-width)
    );

  grid-row-gap: var(--row-gap);
}

.timeline {
  $timeline-color: rgba($color-secondary, 0.7);

  &:nth-child(1) {
    grid-row: 1 / 3;
    grid-column: left-side-start/left-side-end;
    position: relative;

    &::after {
      content: "";
      display: block;
      position: absolute;
      @include box(var(--timeline-dot-size));
      background-color: var(--color-secondary);
      border-radius: 100%;
      left: calc(
        -1 * (var(--timeline-dot-size) / 2) - var(--timeline-width) / 2
      );
      top: calc(-0.9 * var(--timeline-dot-size));
    }
  }

  &:nth-child(2) {
    grid-row: 2 / 7;
    grid-column: right-side-start/ right-side-end;
  }

  &:nth-child(3) {
    grid-row: 6 / 11;
    grid-column: left-side-start / left-side-end;
  }

  &:nth-child(4) {
    grid-row: 10 / 15;
    grid-column: right-side-start/ right-side-end;
  }

  &--left-bottom {
    border-bottom-left-radius: 100vh;
    border-left: var(--timeline-width) solid $timeline-color;
    border-bottom: var(--timeline-width) solid $timeline-color;
  }

  &--top-right-bottom {
    border-top-right-radius: 100vh;

    border-bottom-right-radius: 100vh;
    border-top: var(--timeline-width) solid $timeline-color;
    border-bottom: var(--timeline-width) solid $timeline-color;
    border-right: var(--timeline-width) solid $timeline-color;
  }

  &--top-left-bottom {
    border-top-left-radius: 100vh;
    border-bottom-left-radius: 100vh;
    border-top: var(--timeline-width) solid $timeline-color;
    border-bottom: var(--timeline-width) solid $timeline-color;
    border-left: var(--timeline-width) solid $timeline-color;
  }

  &--right-bottom {
    border-bottom-right-radius: 100vh;
    border-right: var(--timeline-width) solid $timeline-color;
    border-bottom: var(--timeline-width) solid $timeline-color;
  }

  &--top-left {
    border-top-left-radius: 100vh;
    border-top: var(--timeline-width) solid $timeline-color;
    border-left: var(--timeline-width) solid $timeline-color;
  }
}

.event {
  position: relative;
  background: var(--color-secondary);
  box-shadow: $shadow-dark;
  grid-column:1/6;
  min-height: calc(var(--row-height) * 2.3);
  text-align: center;
  align-self: center;
  border-radius: 10rem;
  padding: var(--event-padding);

  &::after {
    content: "";
    @include absoluteCenterVertical;
    @include box(var(--event-dot-size));
    display: block;
    background: var(--color-secondary);
    border-radius: 50%;
    right: calc(
      -1 * (var(--event-dot-size) / 2 + 20% - var(--timeline-width) / 2)
    );
  }

  &:nth-child(even) {
    grid-column: 2/ 7;

    &::after {
      left: calc(
        -1 * (var(--event-dot-size) / 2 + 20% - var(--timeline-width) / 2)
      );
    }
  }
}
